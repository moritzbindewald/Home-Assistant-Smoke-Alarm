blueprint:
  name: Rauchmelder Alarm mit Notfallbest√§tigung
  description: >
    Rauchmelder-Blueprint mit drei Zust√§nden, Critical Alerts und Timeout.
    - Alarm ausgel√∂st: Lichter + Push
    - Notfall best√§tigt: Aktionen nach Best√§tigung oder Timeout
    - Fehlalarm: Aktionen nach Fehlalarm
  domain: automation
  input:
    smoke_detectors:
      name: Rauchmelder
      description: Welche Rauchmelder den Alarm ausl√∂sen
      selector:
        entity:
          domain: binary_sensor
          device_class: smoke
          multiple: true

    residents_group:
      name: Bewohner
      description: Ger√§te, die benachrichtigt werden
      selector:
        entity:
          domain: device_tracker
          multiple: true

    alarm_triggered_lights:
      name: Alarm ausgel√∂st ‚Äì Lichter
      description: Lichter, die beim Alarm aktiviert werden
      selector:
        target:
          entity:
            domain: light

    emergency_confirmed_lights:
      name: Notfall best√§tigt ‚Äì Lichter
      description: Lichter f√ºr den Modus Notfall best√§tigt
      selector:
        target:
          entity:
            domain: light

    false_alarm_lights:
      name: Fehlalarm ‚Äì Lichter
      description: Lichter f√ºr den Modus Fehlalarm
      selector:
        target:
          entity:
            domain: light

    alarm_timeout:
      name: Zeit bis automatische Notfallbest√§tigung
      description: Zeit in Minuten, nach der der Alarm automatisch als Notfall best√§tigt gilt
      default: 5
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: minutes

automation:
  - alias: Rauchmelder Alarm
    trigger:
      - platform: state
        entity_id: !input smoke_detectors
        to: 'on'
    action:
      # Alarm ausgel√∂st Aktionen
      - service: light.turn_on
        target: !input alarm_triggered_lights

      # Push Benachrichtigung mit Critical Alert und Buttons
      - service: notify.mobile_app
        data:
          target: !input residents_group
          message: "üö® Rauchmelder Alarm! Bitte w√§hlen:"
          data:
            push:
              category: "critical_alert"
            actions:
              - action: "EMERGENCY_CONFIRMED"
                title: "Notfall best√§tigen"
              - action: "FALSE_ALARM"
                title: "Fehlalarm"

      # Warten auf Benutzerinteraktion oder Timeout
      - wait_for_trigger:
          - platform: event
            event_type: mobile_app_notification_action
            event_data:
              action: EMERGENCY_CONFIRMED
          - platform: event
            event_type: mobile_app_notification_action
            event_data:
              action: FALSE_ALARM
        timeout: "{{ !input alarm_timeout * 60 }}"
        continue_on_timeout: true

      # Ausf√ºhren der Modus-Aktionen basierend auf der Aktion oder Timeout
      - choose:
          # Timeout ‚Üí automatisch Notfall best√§tigt
          - conditions:
              - condition: template
                value_template: >
                  {% set last_action = wait.trigger %}
                  {{ last_action is none }}
            sequence:
              - service: light.turn_on
                target: !input emergency_confirmed_lights
              - service: notify.mobile_app
                data:
                  target: !input residents_group
                  message: "‚úÖ Notfall automatisch best√§tigt (Timeout)!"
                  data:
                    push:
                      category: "critical_alert"

          # Notfall best√§tigt manuell
          - conditions:
              - condition: event
                event_type: mobile_app_notification_action
                event_data:
                  action: EMERGENCY_CONFIRMED
            sequence:
              - service: light.turn_on
                target: !input emergency_confirmed_lights
              - service: notify.mobile_app
                data:
                  target: !input residents_group
                  message: "‚úÖ Notfall best√§tigt!"
                  data:
                    push:
                      category: "critical_alert"

          # Fehlalarm
          - conditions:
              - condition: event
                event_type: mobile_app_notification_action
                event_data:
                  action: FALSE_ALARM
            sequence:
              - service: light.turn_on
                target: !input false_alarm_lights
              - service: notify.mobile_app
                data:
                  target: !input residents_group
                  message: "‚ö†Ô∏è Fehlalarm!"
                  data:
                    push:
                      category: "critical_alert"