blueprint:
  name: Rauchmelder Alarm (Universell)
  description: >
    Alarmiert bei Rauch, steuert Lichter, Abdeckungen und Benachrichtigung – alle Geräte flexibel wählbar.
  domain: automation
  input:
    smoke_sensors:
      name: Rauchmelder
      description: "Liste der zu überwachenden Rauchmelder (mindestens einer)"
      selector:
        entity:
          domain: binary_sensor
          device_class: smoke
          multiple: true
    lights:
      name: Lichter zum Einschalten
      description: "Diese Lampen werden bei Alarm auf 100% eingeschaltet"
      selector:
        entity:
          domain: light
          multiple: true
    covers:
      name: Abdeckungen zum Öffnen (optional)
      description: "Optional: Diese Rollläden/Abdeckungen werden bei Alarm geöffnet"
      default: []
      selector:
        entity:
          domain: cover
          multiple: true
    notify_target:
      name: Benachrichtigungsziel
      description: "Empfänger für Benachrichtigung"
      selector:
        target: {}
    duration:
      name: Alarmdauer (Minuten)
      description: "Wie lange bleiben Aktionen nach Alarm aktiv?"
      default: 15
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: Minuten
    mute_device:
      name: Gerät zum Stummschalten (optional)
      description: "Optional: Gerät/Entität (z.B. Sirene, Rauchmelder), das nach Ablauf gemutet wird"
      default: ""
      selector:
        device: {}

trigger:
  - platform: state
    entity_id: !input smoke_sensors
    to: "on"

condition: []

action:
  - choose:
      - conditions: []
        sequence:
          - if:
              - condition: template
                value_template: "{{ (inputs.covers | length > 0) }}"
            then:
              - service: cover.open_cover
                target:
                  entity_id: !input covers

          - if:
              - condition: template
                value_template: "{{ (inputs.lights | length > 0) }}"
            then:
              - service: light.turn_on
                target:
                  entity_id: !input lights
                data:
                  brightness_pct: 100

          - service: notify.notify
            data:
              message: "Rauchalarm! Prüfen Sie die Rauchmelder: {{ trigger.to_state.name }}"
              target: !input notify_target

          - delay:
              minutes: !input duration

          - if:
              - condition: template
                value_template: "{{ mute_device != '' }}"
            then:
              - service: select.select_option
                target:
                  device_id: !input mute_device
                data:
                  option: mute

mode: single